#!/usr/bin/env node
"use strict";var t={block:Boolean,chars:String,height:Number,htmlColor:Boolean,invert:Boolean,opacity:Boolean,raw:Boolean,width:Number,writeFileWithTag:String};const r=require("fs");var n=new function(){this.scan=async function(t,n){if(""===t||"/"===t)return console.error("Error: directory to scan cannot be empty."),console.error('If you want to scan your script location, please use "dir2array.Scan(__dirname);"'),null;if("/"!==t.slice(-1)&&(t+="/"),!this.dirExists(t))return;const i=async t=>r.readdirSync(t).sort().reduce(async(r,e)=>{await r;const o=t+e;return this.dirExists(o)?i(o+"/"):n(o)},Promise.resolve());return i(t)},this.dirExists=function(t){try{return r.lstatSync(t).isDirectory()}catch{return!1}},this.fileExists=function(t){try{return r.existsSync(t)}catch{return!1}}};const{createCanvas:i,loadImage:e}=require("canvas");async function o(t,r,n,o){const s=await e(t),c=i(r,n);c.width=r,c.height=n;const a=c.getContext("2d");a.drawImage(s,0,0,r,n);const u=a.getImageData(0,0,r,n).data,l=[];let h;for(let t=0;t<n;t+=2)for(let n=0;n<r;n++){const i=4*(t*r+n),e=[u[i],u[i+1],u[i+2],u[i+3]];0===n&&(h=[],o?o(h):l.push(h)),o?o(e):h.push(e)}return l}const s={" ":"&nbsp;"},c=(t,r,n)=>"rgb("+[t,r,n].join(",")+");";function a({chars:t,isInvert:r,isHtmlColor:n,isBlock:i,isOpacity:e,isRaw:o}){let a=[];const u=(t||(n?" CGO08@":" .,:;i1tfLCG08@")).split("");function l(t){if(0===t.length){if(0===a.length)return;return void a.push(n?"<br/>":o?["",[]]:"\n")}const[l,h,f]=t,p=(.3*l+.59*h+.11*f)/255;let g=u.length-1-Math.round(p*(u.length-1));r&&(g=u.length-1-g);let y=u[g];n&&s[y]&&(y=s[y]);const d=function(t,[r,o,s,a]){if(!n)return;return"<span style='color:"+c(r,o,s)+(i?"background-color:"+c(r,o,s):"")+(e?"opacity:"+a/255+";":"")+"'>"+t+"</span>"}(y,t)||function(t,[r,n,i,e]){if(!o)return;return[t,[r,n,i,e]]}(y,t)||y;a.push(d)}function h(t){if(!Array.isArray(t))return o?JSON.stringify(a):a.join("");a=t}return{asciiChars:h,pixel:l,pixels:function(t){for(const r of t){for(const t of r)l(t);l([])}return h()}}}const{promisify:u}=require("util"),{URL:l}=require("url"),h=require("http"),f=require("https"),p=require("image-size");async function g({width:t,height:r},i){if(t&&r)return{width:t,height:r};let e=t,o=r;const s=await(async t=>{if(n.fileExists(t))return u(p)(t);const r=new l(t);return new Promise(n=>{(t.startsWith("https:")?f:h).get(r,t=>{const r=[];t.on("data",t=>{r.push(t)}).on("end",()=>{const t=Buffer.concat(r);n(p(t))})})})})(i);if(e||o||(e=100),e){const t=s.width/e;o=Math.round(s.height/t)}else{const t=s.height/o;e=Math.round(s.width/t)}return{width:e,height:o}}const y=require("fs");!async function(){const r=process.argv.slice(2),[i,...e]=r;i||console.log("run: ascii-img {image-path} {options?}");const s=e.reduce((r,n)=>{const[i,e]=n.replace(/^--?/,"").split("=");return t[i]&&(r[i]=t[i](e)),r},{}),{writeFileWithTag:c}=s,u=async(t,r)=>{if(!r&&!/\.(jpe?g|png|svg)$/i.test(t))return;const n=function(t,r){let n=[];return r&&n.push("FILENAME="+r+":"),n.push(t),r&&n.push("[EOF]"),n=n.join("\n"),n}(await async function(t,r={}){if(!t||"string"!=typeof t)throw new TypeError("Invalid image source value: "+t);if("object"!=typeof r)throw new TypeError("Invalid options: "+r);const n=r.chars||null,i=!0===r.opacity,e=!0===r.block,s=!0===r.htmlColor,c=!0===r.invert,u=!0===r.raw,l=!1!==r.stream,{width:h,height:f}=await g(r,t),p=a({chars:n,isInvert:c,isBlock:e,isOpacity:i,isHtmlColor:s,isRaw:u});if(l)return await o(t,h,f,p.pixel),p.asciiChars();const y=await o(t,h,f);return p.pixels(y)}(t,s).catch(console.log),c?void 0:t);c?y.writeFileSync(`${t}.${c}`,n,"utf-8"):console.log(n)};n.dirExists(i)?await n.scan(i,u):u(i,!0)}();

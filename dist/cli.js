#!/usr/bin/env node
"use strict";var validateArgs={block:Boolean,chars:String,height:Number,htmlColor:Boolean,invert:Boolean,opacity:Boolean,raw:Boolean,width:Number,writeFileWithTag:String};const fs=require("fs");var dir=new function(){this.scan=async function(t,r){if(""===t||"/"===t)return console.error("Error: directory to scan cannot be empty."),console.error('If you want to scan your script location, please use "dir2array.Scan(__dirname);"'),null;if("/"!==t.slice(-1)&&(t+="/"),!this.dirExists(t))return;const i=async t=>fs.readdirSync(t).sort().reduce(async(n,s)=>{await n;const e=t+s;return this.dirExists(e)?i(e+"/"):r(e)},Promise.resolve());return i(t)},this.dirExists=function(t){try{return fs.lstatSync(t).isDirectory()}catch(t){return!1}},this.fileExists=function(t){try{return fs.existsSync(t)}catch(t){return!1}}};const{createCanvas:createCanvas,loadImage:loadImage}=require("canvas");async function fromCanvas(t,r,i,n){const s=await loadImage(t),e=createCanvas(r,i);e.width=r,e.height=i;const o=e.getContext("2d");o.drawImage(s,0,0,r,i);const a=o.getImageData(0,0,r,i).data,c=[];let l;for(let t=0;t<i;t+=2)for(let i=0;i<r;i++){const s=4*(t*r+i),e=[a[s],a[s+1],a[s+2],a[s+3]];0===i&&(l=[],n?n(l):c.push(l)),n?n(e):l.push(e)}return c}const defaultCharList=" .,:;i1tfLCG08@",defaultColorCharList=" CGO08@",convertHtmlChars={" ":"&nbsp;"},rgbHtmlStr=(t,r,i)=>"rgb("+[t,r,i].join(",")+");";function toAscii({chars:t,isInvert:r,isHtmlColor:i,isBlock:n,isOpacity:s,isRaw:e}){let o=[];const a=(t||(i?defaultColorCharList:defaultCharList)).split("");function c(t){if(0===t.length){if(0===o.length)return;return void o.push(i?"<br/>":e?["",[]]:"\n")}const[c,l,u]=t,h=(.3*c+.59*l+.11*u)/255;let f=a.length-1-Math.round(h*(a.length-1));r&&(f=a.length-1-f);let d=a[f];i&&convertHtmlChars[d]&&(d=convertHtmlChars[d]);const g=function(t,[r,e,o,a]){if(!i)return;return"<span style='color:"+rgbHtmlStr(r,e,o)+(n?"background-color:"+rgbHtmlStr(r,e,o):"")+(s?"opacity:"+a/255+";":"")+"'>"+t+"</span>"}(d,t)||function(t,[r,i,n,s]){if(!e)return;return[t,[r,i,n,s]]}(d,t)||d;o.push(g)}function l(t){if(!Array.isArray(t))return e?JSON.stringify(o):o.join("");o=t}return{asciiChars:l,pixel:c,pixels:function(t){return t.forEach(t=>{t.forEach(t=>{c(t)}),c([])}),l()}}}const{promisify:promisify}=require("util"),{URL:URL}=require("url"),http=require("http"),https=require("https"),sizeOf=require("image-size");var dimensions=async t=>{if(dir.fileExists(t))return promisify(sizeOf)(t);const r=new URL(t);return new Promise(i=>{(t.startsWith("https:")?https:http).get(r,t=>{const r=[];t.on("data",t=>{r.push(t)}).on("end",()=>{const t=Buffer.concat(r);i(sizeOf(t))})})})};async function asciiImgCanvasNodejs(t,r={}){if(!t||"string"!=typeof t)throw new TypeError("Invalid image source value: "+t);if("object"!=typeof r)throw new TypeError("Invalid options: "+r);const i=r.chars||null,n=!0===r.opacity,s=!0===r.block,e=!0===r.htmlColor,o=!0===r.invert,a=!0===r.raw,c=!1!==r.stream,l=r.height||150;let{width:u}=r;if(void 0===u){const r=await dimensions(t),i=r.height/l;u=Math.round(r.width/i),console.log({height:l,ratio:i,width:u,dim:r})}else u=u||l;console.log({width:u,height:l});const h=toAscii({chars:i,isInvert:o,isBlock:s,isOpacity:n,isHtmlColor:e,isRaw:a});if(c)return await fromCanvas(t,u,l,h.pixel),h.asciiChars();const f=await fromCanvas(t,u,l);return h.pixels(f)}const fs$1=require("fs");function formatOutput(t,r){let i=[];return r&&i.push("FILENAME="+r+":"),i.push(t),r&&i.push("[EOF]"),i=i.join("\n")}async function main(){const t=process.argv.slice(2),[r,...i]=t;r||console.log("run: ascii-img {image-path} {options?}");const n=i.reduce((t,r)=>{const[i,n]=r.replace(/^--?/,"").split("=");return validateArgs[i]&&(t[i]=validateArgs[i](n)),t},{}),{writeFileWithTag:s}=n,e=async t=>{if(!t.match(/\.(jpe?g|png|svg)$/i))return;const r=formatOutput(await asciiImgCanvasNodejs(t,n).catch(console.log),s?void 0:t);s?fs$1.writeFileSync(`${t}.${s}`,r,"utf-8"):console.log(r)};dir.dirExists(r)?await dir.scan(r,e):e(r)}main();
